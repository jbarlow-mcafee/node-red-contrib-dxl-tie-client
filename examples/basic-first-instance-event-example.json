[
    {
        "id": "ac6adada.f8bae8",
        "type": "tab",
        "label": "TIE First Instance Event Example",
        "disabled": false,
        "info": "This sample registers with the DXL fabric to receive first instance events from\r\nTIE when files are encountered for the first time within the local enterprise.\r\nThe payload from the event message received is printed to the Node-RED `debug`\r\ntab.\r\n\r\n### Prerequisites\r\n\r\n* The samples configuration step has been completed (see\r\n  [Client Configuration](https://opendxl.github.io/node-red-contrib-dxl/jsdoc/tutorial-configuration.html)).\r\n* A TIE service is available on the DXL fabric.\r\n\r\n### Setup\r\n\r\nTo deploy the flow, press the `Deploy` button in the upper-right corner of the\r\nscreen. If Node-RED is able to properly connect to the DXL fabric, a green dot\r\nwith the word `connected` should appear under the\r\n`Receive TIE file first instance event` node.\r\n\r\n### Running\r\n\r\nExecute a file that has not been previously seen within the local enterprise.\r\n\r\n### Output\r\n\r\nAfter the file has executed, an entry similar to following should appear in\r\nthe Node-RED `debug` tab:\r\n\r\n```\r\n▶ { agentGuid: \"{8953c682-ce6e-4231-900c-e18c2…\", hashes: object, name: \"MORPH.EXE\" }\r\n```\r\n\r\nClick on the right arrow buttons to expand the contents of the object. The\r\ncontent should look similar to the following:\r\n\r\n```\r\n▼ object\r\n   localReputation: 1\r\n   name: \"FOCUS_MALWARE2.EXE\"\r\n   remediationAction: 5\r\n   agentGuid: \"{f7b43cb3-8828-4d52-9885-9c6306ded793}\"\r\n ▼ hashes: object\r\n     md5: \"31dbe8cc443d2ca7fd236ac00a52fb17\"\r\n     sha1: \"2d6ca45061b7972312e00e5933fdff95bb90b61b\"\r\n     sha256: \"aa3c461d4c21a392e372d0d6ca4ceb1e4d88098d587659454eaf4d93c661880f\r\n   name: \"MORPH.EXE\"\r\n```\r\n\r\nThe following information is included in the `first instance` object:\r\n\r\n* System the first instance of the file was found on\r\n* File information (file name and associated hashes)\r\n\r\n### Details\r\n\r\nThe flow exercises the nodes below.\r\n\r\n#### Receive TIE file first instance event\r\n\r\nThis is a `tie file first event` input node which starts the flow. This node\r\ninjects a new message with a `payload` property which includes the information\r\nfrom the first instance event.\r\n\r\n#### Output result\r\n\r\nThis is a `debug` output node. This node outputs the `payload` set on\r\nthe message by the `Receive TIE file first instance event` node."
    },
    {
        "id": "305817b5.6cc8c8",
        "type": "dxl-tie-file-first-instance in",
        "z": "ac6adada.f8bae8",
        "name": "Receive TIE file first instance event",
        "client": "",
        "payloadType": "obj",
        "x": 160,
        "y": 40,
        "wires": [
            [
                "8cf064a0.14cdd8"
            ]
        ]
    },
    {
        "id": "8cf064a0.14cdd8",
        "type": "debug",
        "z": "ac6adada.f8bae8",
        "name": "Output event payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 420,
        "y": 40,
        "wires": []
    }
]
